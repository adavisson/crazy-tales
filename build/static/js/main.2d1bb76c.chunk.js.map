{"version":3,"sources":["components/Home.js","components/NavBar.js","components/Story.js","components/Templates.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","href","NavBar","Navbar","sticky","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","inline","Story","props","template","value","map","string","index","console","log","values","Templates","useState","blanks","setTemplate","setValues","submitted","setSubmitted","useEffect","a","axios","result","data","fetchData","handleSubmit","event","preventDefault","handleChange","target","refreshPage","window","location","reload","title","Button","onClick","variant","Form","onSubmit","blank","Group","Label","Control","type","onChange","required","Object","About","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d1bb76c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <h1>Crazy Tales</h1>\n      <div className=\"story\">\n        <p>Welcome to Crazy Tales! Click <a href=\"/templates\">here</a> to get started, or if you would like to read more about this project then click <a href=\"/about\">here</a> to go to the about page.</p>\n      </div>\n    </div>\n  );\n}\n \nexport default Home;","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\n\n\nconst NavBar = () => {\n  return (\n    <Navbar sticky=\"top\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">Crazy Tales</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/templates\">Templates</Nav.Link>\n          <Nav.Link href=\"/about\">About</Nav.Link>\n        </Nav>\n        <Nav inline>\n          <Nav.Link href=\"https://andydavisson.com\">Back to andydavisson.com</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n \nexport default NavBar;\n","import React from 'react';\n\nconst Story = (props) => {\n  \n  const renderStory = () => {\n    // console.log(props.template);\n    // console.log(props.values);\n    return(\n      <>\n        {props.template.value.map((string, index) => {\n          console.log(string);\n          if(string != 0 && props.values[index]){\n            return(\n              `${string}` + `${props.values[index]}`\n            )\n          } else if (!string && props.values[index]){\n            return(\n              `${props.values[index]}`\n            )\n          } else if (string != 0){\n            return(\n              `${string}`\n            )\n          }\n        })}\n      </>\n    )\n  }\n  \n  return (\n    <div className=\"story\">\n      <p>\n        {renderStory()}\n      </p>\n    </div>\n  );\n}\n \nexport default Story;","import React, { useEffect, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport Story from './Story';\n\nconst Templates = () => {\n  const [template, setTemplate] = useState({ blanks: [] });\n  const [values, setValues] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  // const [width, setWidth] = useState(0);\n  \n  useEffect(() => {\n    const fetchData = async() => {\n      const result = await axios(\n        'https://madlibz.herokuapp.com/api/random',\n      );\n\n      setTemplate(result.data);\n    }\n    fetchData();\n  }, []);\n\n  // useEffect(() => {\n  //   window.addEventListener('resize',() => {\n  //     setWidth(window.innerWidth);\n  //     });\n  //   return () => window.removeEventListener('resize',() => setWidth(window.innerWidth));\n  // },[width]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSubmitted(true)\n  }\n\n  const handleChange = (event) => {\n    setValues({\n      ...values, [event.target.id]: event.target.value\n    });\n    console.log(values);\n  }\n\n  const renderForm = () => {\n    // let isDesktop;\n    // if (width < 700){\n    //   isDesktop = \"mobile\";\n    // } else {\n    //   isDesktop = \"desktop\";\n    // }\n\n\n    return (\n      <Form className=\"form\" onSubmit={handleSubmit}>\n        {template.blanks.map((blank, index) => {\n          return (\n            <Form.Group>\n              <Form.Label>{blank}</Form.Label>\n              <Form.Control type=\"text\" id={`word_${index}`} value={values[index]} onChange={handleChange} required/>\n            </Form.Group>\n          )\n        })}\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    )\n  }\n\n  const refreshPage = () => {\n    window.location.reload(false);\n  }\n\n  return (\n    <div className=\"template\">\n      <h1>{template.title}</h1>\n      {!submitted && <Button onClick={refreshPage} variant=\"link\">\n        Different Story\n      </Button>}\n      <br/>\n      {!submitted && renderForm()}\n      {!!submitted && <Story template={template} values={Object.values(values)} />}\n      <br/><br/><br/>\n      {!!submitted && <Button variant=\"primary\" onClick={refreshPage}>\n        Another Story\n      </Button>}\n    </div>\n  );\n}\n \nexport default Templates;","import React from 'react';\n\nconst About = () => {\n  return (\n    <div className=\"about\">\n      <h1>About Crazy Tales</h1>\n      <div className=\"story\">\n        <p>This app uses the Madlibz API found <a target=\"_blank\" href=\"https://madlibz.herokuapp.com/api\">here</a>. This mimics another project I did called Wacky Stories, but with this project I am not using Redux and I am using a pre-existing API. This is also my first project attempting to use React Hooks.</p>\n      </div>\n    </div>\n  );\n}\n \nexport default About;","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\nimport Home from './components/Home';\nimport NavBar from './components/NavBar';\nimport Templates from './components/Templates';\nimport About from './components/About';\n\nfunction App() {\n  return (\n     <Router>\n      <div className=\"App\">\n        <NavBar />\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/templates\" component={Templates} />\n        <Route path=\"/about\" component={About} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}